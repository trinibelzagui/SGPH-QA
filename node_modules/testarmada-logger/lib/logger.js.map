{"version":3,"sources":["../src/logger.js"],"names":["debug","process","env","TESTARMADA_LOGGER_DEBUG","PREFIX","Logger","prefix","output","console","deb","blueBright","msg","log","format","info","greenBright","warn","yellowBright","err","redBright","error","module","exports"],"mappings":";;;;AAAA;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,SAAQ,YAAKA,KAAL,IAAcC,QAAQC,GAAR,CAAYC,uBAAxC;;AAEA,IAAMC,SAAS,YAAf;;IAEMC,M;AACJ,oBAA2B;AAAA,QAAfC,MAAe,uEAAN,IAAM;;AAAA;;AACzB,SAAKA,MAAL,GAAcA,SAASA,MAAT,GAAkBF,MAAhC;AACA,SAAKG,MAAL,GAAcC,OAAd;AACD;;;;4BAEa;AACZ;AACA,UAAIR,MAAJ,EAAW;AACT,YAAMS,MAAM,mBAAIC,UAAJ,CAAe,SAAf,CAAZ;;AADS,0CAFJC,GAEI;AAFJA,aAEI;AAAA;;AAET,aAAKJ,MAAL,CAAYK,GAAZ,CAAgB,eAAKC,MAAL,CAAY,YAAZ,EAA0BJ,GAA1B,EAA+B,KAAKH,MAApC,EAA4CK,GAA5C,CAAhB;AACD;AACF;;;0BAEW;AACV,UAAMG,OAAO,mBAAIC,WAAJ,CAAgB,QAAhB,CAAb;;AADU,yCAALJ,GAAK;AAALA,WAAK;AAAA;;AAEV,WAAKJ,MAAL,CAAYK,GAAZ,CAAgB,eAAKC,MAAL,CAAY,YAAZ,EAA0BC,IAA1B,EAAgC,KAAKR,MAArC,EAA6CK,GAA7C,CAAhB;AACD;;;2BAEY;AACX,UAAMK,OAAO,mBAAIC,YAAJ,CAAiB,QAAjB,CAAb;;AADW,yCAALN,GAAK;AAALA,WAAK;AAAA;;AAEX,WAAKJ,MAAL,CAAYS,IAAZ,CAAiB,eAAKH,MAAL,CAAY,YAAZ,EAA0BG,IAA1B,EAAgC,KAAKV,MAArC,EAA6CK,GAA7C,CAAjB;AACD;;;0BAEW;AACV,UAAMO,MAAM,mBAAIC,SAAJ,CAAc,SAAd,CAAZ;;AADU,yCAALR,GAAK;AAALA,WAAK;AAAA;;AAEV,WAAKJ,MAAL,CAAYa,KAAZ,CAAkB,eAAKP,MAAL,CAAY,YAAZ,EAA0BK,GAA1B,EAA+B,KAAKZ,MAApC,EAA4CK,GAA5C,CAAlB;AACD;;;8BAEe;AAAA,yCAALA,GAAK;AAALA,WAAK;AAAA;;AACd,WAAKJ,MAAL,CAAYK,GAAZ,CAAgB,eAAKC,MAAL,CAAY,IAAZ,EAAkBF,GAAlB,CAAhB;AACD;;;;;;AAGHU,OAAOC,OAAP,GAAiB,IAAIjB,MAAJ,EAAjB","file":"logger.js","sourcesContent":["import { argv } from \"yargs\";\nimport util from \"util\";\nimport clc from \"cli-color\";\n\nconst debug = argv.debug || process.env.TESTARMADA_LOGGER_DEBUG;\n\nconst PREFIX = \"Testarmada\";\n\nclass Logger {\n  constructor(prefix = null) {\n    this.prefix = prefix ? prefix : PREFIX;\n    this.output = console;\n  }\n\n  debug(...msg) {\n    /* istanbul ignore if */\n    if (debug) {\n      const deb = clc.blueBright(\"[DEBUG]\");\n      this.output.log(util.format(\"%s [%s] %s\", deb, this.prefix, msg));\n    }\n  }\n\n  log(...msg) {\n    const info = clc.greenBright(\"[INFO]\");\n    this.output.log(util.format(\"%s [%s] %s\", info, this.prefix, msg));\n  }\n\n  warn(...msg) {\n    const warn = clc.yellowBright(\"[WARN]\");\n    this.output.warn(util.format(\"%s [%s] %s\", warn, this.prefix, msg));\n  }\n\n  err(...msg) {\n    const err = clc.redBright(\"[ERROR]\");\n    this.output.error(util.format(\"%s [%s] %s\", err, this.prefix, msg));\n  }\n\n  loghelp(...msg) {\n    this.output.log(util.format(\"%s\", msg));\n  }\n}\n\nmodule.exports = new Logger();\n"]}